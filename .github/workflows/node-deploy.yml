name: DEPLOY TO STAGING

on:
  pull_request:
    types: [closed]
    branches:
      - dev

jobs:
  aws-deploy:
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.AWS_DB_HOST }}
      DB_PW: ${{ secrets.AWS_DB_PW}}
      DB_USER: ${{ secrets.AWS_DB_USER }}
      DB_NAME: ${{ secrets.AWS_DB_NAME }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: dev
      - uses: actions/setup-node@v1
      - run: npm install
      
      - name: Create .env file 
        run: |
          touch .env
          echo "DB_HOST='$DB_HOST'" > .env
          echo "DB_PW='$DB_PW'" >> .env
          echo "DB_USER='$DB_USER'" >> .env
          echo "DB_NAME='$DB_NAME'" >> .env

      - run: npm run bundle
      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v2.1.1
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "deploy/"
          REMOTE_HOST: "project2.eaglesoftwareteam.com"
          REMOTE_USER: ubuntu
          TARGET: "nodeapps/2023/project2/t1"
      - name: Execute SSH commmands on remote server
        uses: JimCronqvist/action-ssh@master
        env:
          NAME: "Root"
        with:
          hosts: "ubuntu@project2.eaglesoftwareteam.com"
          privateKey: ${{ secrets.SERVER_SSH_KEY }}
          debug: false
          command: |
            cd nodeapps/2023/project2/t1
            npm install
            sudo systemctl stop course-t1-backend
            sudo cp course-t1-backend.service /lib/systemd/system/course-t1-backend.service
            sudo systemctl daemon-reload
            sudo systemctl start course-t1-backend
